//break是结束整个循环体，continue是结束单次循环

比方说：

while(x++ < 10)
{
    if(x == 3)
    {
        break;
    }
    printf("%d\r\n", x);
}
结果是输出  1 2   就退出了整个while循环


但是如果使用continue
while(x++ < 10)
{
    if(x == 3)
    {
        continue;
    }
    printf("%d\r\n", x);
}
结果是：1 2 4 5 6 7 8 9 10  可见他仅仅是不输出3，因为他结束了本次循环

赞同65|评论

[r6s1g3]

求助知友

chstk | 当前分类：9 级

擅长C/C++：9 级

按默认排序|按时间排序

其他回答共3条

[INS::INS]2010-02-03 22:12逗绵羊| 当前分类：5 级

break跳出整个循环，continue跳出当层循环
例子：
for(int i = 1;i<=3;i++)
{
       if( i == 2 )
           break;
       else
           printf("%d\n",i);
}
看上面，如果i=2的时候，执行break，那么跳出for的整个循环，即i=3就不会执行了，执行结果：1（换行）

换成continue如下：
for(int i = 1;i<=3;i++)
{
       if( i == 2 )
           continue;
       else
           printf("%d\n",i);
}
如果i=2，执行continue，跳出当层的循环，即跳出i=2这一层循环，但继续执行for循环（如果满足条件的话），这里条件是i<=3，所以i=3还是会被执行的，执行结果：1（换行）3（换行）

赞同3|评论
[INS::INS]2010-02-03 21:51高手的粉丝 | 来自手机知道 | 当前分类：5 级

break是结束整个循环，而continue是结束本次循环（跳过下一步）

赞同4|评论
[INS::INS]2010-02-03 21:49热心网友

for (i=0;i<10;i++)
{
  if (i==6) continue;/*如果i==6则不再执行下面的if语句，而是直接进行下一轮循环*/
  if (i==7) break;/*如果i==7，则不再执行剩余的循环，直接退出for循环去执行下面的printf();*/
}

printf("break");
