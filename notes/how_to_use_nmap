namp

目录

什么是Nmap
一个入侵过程的简单描述
Ping扫描(Ping Sweeping)
端口扫描(Port Scanning)
隐蔽扫描(Stealth Scanning)
namp 奈朴皮草展开
什么是Nmap
一个入侵过程的简单描述
Ping扫描(Ping Sweeping)
端口扫描(Port Scanning)
隐蔽扫描(Stealth Scanning)
namp 奈朴皮草展开
编辑本段
什么是Nmap

Nmap是一款针对大型网络的端口扫描工具，尽管它也适用于单机扫描。在不同情况下，你可能需要隐藏扫描、越过防火墙扫描或者使用不同的协议进行扫描，比如：UDP、TCP、ICMP 等）。它支持：Vanilla TCP connect 扫描、TCP SYN（半开式）扫描、TCP FIN、Xmas、或NULL（隐藏）扫描、TCP ftp代理（跳板）扫描、SYN/FIN IP 碎片扫描（穿越部分数据包过滤器）、TCP ACK和窗口扫描、UDP监听ICMP端口无法送达扫描、ICMP扫描（狂ping）、TCP Ping扫描、直接RPC扫描（无端口映射）、TCP/IP指纹识别远程操作系统，以及相反身份认证扫描等。Nmap同时支持性能和可靠性统计，例如：动态延时计算，数据包超时和转发，并行端口扫描，通过并行ping侦测下层主机。该版本需要Winpcap V2.1 以上支持。
Nmap是在免费软件基金会的GNU General Public License (GPL)下发布的,可免费下载.
编辑本段
一个入侵过程的简单描述

最近媒体报道了许多关于入侵网络的新闻,使人们总以为入侵者只需通过简单工具就可获得电脑的访问权限.但实际上,事情并不是想象中的这么简单.黑客想要入侵一台电脑,首先要有一套完整的计划.在入侵系统之前,黑客必须先找到一台目标主机,并查出哪些端口在监听之后才能进行入侵.
找出网络上的主机,测试哪些端口在监听,这些工作通常是由扫描来实现的.扫描网络是黑客进行入侵的第一步.通过使用扫描器(如Nmap)扫描网络,寻找存在漏洞的目标主机.一旦发现了有漏洞的目标,接下来就是对监听端口的扫描.Nmap通过使用TCP协议栈指纹准确地判断出被扫主机的操作系统类型.
本文全方位地介绍Nmap的使用方法,可以让安全管理员了解在黑客眼中的站点.并通过使用它,安全管理员可以发现自己网站的漏洞,并逐步完善自己的系统.
在目标机上,Nmap运行灵活.使用Nmap进行单机扫描或是整个网络的扫描很简单,只要将带有"/mask"的目标地址指定给Nmap即可.地址是"victim/24", 则目标是c类网络,地址是"victim/16", 则目标是B类网络.
另外,Nmap允许你使用各类指定的网络地址,比如 192.168.7.*,是指192.168.7.0/24, 或 192.168.7.1,4,8-12,对所选子网下的主机进行扫描.
编辑本段
Ping扫描(Ping Sweeping)

入侵者使用Nmap扫描整个网络寻找目标.通过使用" -sP"命令,进行ping扫描.缺省情况下,Nmap给每个扫描到的主机发送一个ICMP echo和一个TCP ACK, 主机对任何一种的响应都会被Nmap得到.
举例:扫描192.168.7.0网络:
# nmap -sP 192.168.7.0/24
Starting nmap V. 2.12 by Fyodor
Host (192.168.7.11) appears to be up.
Host (192.168.7.12) appears to be up.
Host (192.168.7.76) appears to be up.
Nmap run completed -- 256 IP addresses (3 hosts up) scanned in 1 second
如果不发送ICMP echo请求,但要检查系统的可用性,这种扫描可能得不到一些站点的响应.在这种情况下,一个TCP"ping"就可用于扫描目标网络.
一个TCP"ping"将发送一个ACK到目标网络上的每个主机.网络上的主机如果在线,则会返回一个TCP RST响应.使用带有ping扫描的TCP ping选项,也就是"PT"选项可以对网络上指定端口进行扫描(本文例子中指的缺省端口是80(http)号端口),它将可能通过目标边界路由器甚至是防火墙.注意,被探测的主机上的目标端口无须打开,关键取决于是否在网络上.
# nmap -sP -PT80 192.168.7.0/24
TCP probe port is 80
Starting nmap V. 2.12 by Fyodor
Host (192.168.7.11) appears to be up.
Host (192.168.7.12) appears to be up.
Host (192.168.7.76) appears to be up.
Nmap run completed -- 256 IP addresses (3 hosts up) scanned in 1 second
当潜在入侵者发现了在目标网络上运行的主机,下一步是进行端口扫描.
Nmap支持不同类别的端口扫描TCP连接, TCP SYN, Stealth FIN, Xmas Tree,Null和UDP扫描.
编辑本段
端口扫描(Port Scanning)

一个攻击者使用TCP连接扫描很容易被发现,因为Nmap将使用connect()系统调用打开目标机上相关端口的连接,并完成三次TCP握手.黑客登录到主机将显示开放的端口.一个tcp连接扫描使用"-sT"命令如下.
# nmap -sT 192.168.7.12
Starting nmap V. 2.12 by Fyodor
Interesting ports on (192.168.7.12):
Port State Protocol Service
7 open tcp echo
9 open tcp discard
13 open tcp daytime
19 open tcp chargen
21 open tcp ftp
...
Nmap run completed -- 1 IP address (1 host up) scanned in 3 seconds
编辑本段
隐蔽扫描(Stealth Scanning)

如果一个攻击者不愿在扫描时使其信息被记录在目标系统日志上,TCP SYN扫描可帮你的忙,它很少会在目标机上留下记录,三次握手的过程从来都不会完全实现.通过发送一个SYN包(是TCP协议中的第一个包)开始一次SYN的扫描.任何开放的端口都将有一个SYN|ACK响应.然而,攻击者发送一个RST替代ACK,连接中止.三次握手得不到实现,也就很少有站点能记录这样的探测.如果是关闭的端口,对最初的SYN信号的响应也会是RST,让NMAP知道该端口不在监听."-sS"命令将发送一个SYN扫描探测主机或网络:
# nmap -sS 192.168.7.7
Starting nmap V. 2.12 by Fyodor
Interesting ports on saturnlink.nac、net (192.168.7.7):
Port State Protocol Service
21 open tcp ftp
25 open tcp smtp
53 open tcp domain
80 open tcp http
...
Nmap run completed -- 1 IP address (1 host up) scanned in 1 second
虽然SYN扫描可能不被注意,但他们仍会被一些入侵检测系统捕捉.Stealth FIN,Xmas树和Null scans可用于躲避包过滤和可检测进入受限制端口的SYN包.这三个扫描器对关闭的端口返回RST,对开放的端口将吸收包.一个 FIN "-sF"扫描将发送一个FIN包到每个端口.
然而Xmas扫描"-sX"打开FIN, URG和PUSH的标志位,一个Null scans "-sN"关闭所有的标志位.因为微软不支持TCP标准,所以FIN, Xmas Tree和Null scans在非微软公司的操作系统下才有效.
