http://www.linuxidc.com/Linux/2011-07/38251.htm


5分钟OpenBox配置指南
[日期：2011-07-10] 	来源：Linux社区  作者：Linux 	[字体：大 中 小]

如果你厌倦了gnome,kde这样的复杂桌面环境, 可以尝试下openbox这个轻量级的DE.
最大的优点就是占用资源少, 运行效率高.

安装所需软件

    openbox: 最基本桌面环境, 必须的
    slim : 轻量级图形登录管理器, 可以替代gdm/kdm
    tint2 : 提供下面板
    wbar : 提供一个dock
    feh : 设置壁纸
    obconf : openbox的图形化设置工具
    obmenu : openbox的图形化菜单编辑工具
    tint2conf: tint2的图形化设置工具
    wbarconf: wbar的图形化设置工具
    lxappearance: lxde的外观设置工具, 可同样用于openbox, 设置主题, 窗口字体等.
    pcmanfm: 文件管理工具
    obmixer: 托盘区音量图标
    nm-applet: 网络连接管理器
    scrot : 截屏工具

除openbox是必须的外, 其它软件均有替代品. 可以在熟悉之后自由更换.

1. 安装openbox相关软件
各大发行版源中应该都有, 这里以archlinux为例

pacman -S openbox slim tint2 wbar feh obconf obmenu tint2conf 
lxappearance pcmanfm scrot

#以下需要从aur安装, 可以用yaourt

wbarconf obmixer

2. 修改/etc/inittab
在最下方的引导工具中, 注释掉gdm/kdm语句, 并取消slim语句注释
改完如下所示

#x:5:respawn:/usr/sbin/gdm -nodaemon
#x:5:respawn:/usr/bin/kdm -nodaemon
x:5:respawn:/usr/bin/slim >/dev/null 2>&1

3. 修改~/.xinitrc, 加入这一句

exec openbox-session

复制代码
以便开机启动openbox进程

注: 在同一台机上, gdm/kdm/openbox环境是可以并存的. 由引导器决定到底启动哪个DE.
2,3二步的目的就是在保留gnome/kde环境的前提下, 引导openbox.
同理, 如果你又想切回gnome/kde环境又该怎么做呢?很简单, 只要把2,3二步反向操作下就可以了, 即注释掉slim和openbox-session二句,并取消gdm/kdm的注释即可. 这也是为什么推荐用slim的原因, 和原有的环境保持分离.

4. 创建~/.config/openbox/autostart.sh
openbox启动时, 默认会执行这个脚本, 所以可以把要启动的程序都写在这里
注意, 安装时不会自动创建这个文件, 需要自己手动创建
内容如下

nm-applet&amp;
tint2&amp;
(sleep 2 &amp;&amp; wbar)&amp;
ibus-daemon -rxd&amp;
(sleep 2 &amp;&amp; obmixer)&amp;
feh --bg-scale picture.jpg

wbar, obmixer都要先等几秒再启动, 否则可能会有意想不到的错误. 个人经验,
也许你不用等待也会一切正常, 自行选择吧.

4. 重启电脑, 以便加载openbox环境

5. 输入帐号密码后, 你就可以看到openbox环境了, 是不是太简洁了?
没关系, 现在可以使用各个图形化设置工具了.openbox的配置文件主要有二个,分别是~/.config/openbox/rc.xml和~/.config/openbox/menu.xml.前者可以由obconf更改, 后者可由obmenu更改

注意:

    obconf不能自定义rc.xml中的快捷键部分, 这里需要自行添加
    obconf: 虽然可改项很多, 但实际上并没有多少要改的,默认即可
    obmenu: 在桌面右键时, 会弹出一个菜单. obmenu就是自定义这个菜单的
    lxappearance: 相对来说, 这个可能更适合大多数用户, 选择窗口主题, 鼠标主题等等.
    tint2conf: 自定义tint2面板
    wbar-conf: 自定义wbar

6. 附几个配置
a. rc.xml中的”显示桌面”快捷键设置, 这里用的windows+d

    <keybind key=”W-d”>
         <action name=”ToggleShowDesktop”/>
        </keybind>

b. rc.xml中的”截屏”快捷键, 截取当前窗口, ctrl+Print Screen

    <keybind key=”C-Print”>
             <action name=”Execute”>
               <command>scrot -s “/home/allblue/pictures/scrot/cut-%m.%d-%H%M%S.png”</command>
             </action>
        </keybind>

全屏载取, Print Screen

    <keybind key=”Print”>
             <action name=”Execute”>
                <command>scrot “/home/allblue/pictures/scrot/screen-%m.%d-%H%M%S.png”</command>
             </action>
        </keybind>

c. rc.xml多媒体快捷键设置
音量放大

    <keybind key=”XF86AudioRaiseVolume”>
         <action name=”Execute”>
           <command>amixer set Master 5%+ unmute</command>
         </action>
        </keybind>

静音

    <keybind key=”XF86AudioMute”>
         <action name=”Execute”>
           <command>amixer set Master toggle</command>
         </action>
        </keybind>

打开主页

    <keybind key=”XF86HomePage”>
         <action name=”Execute”>
           <command>firefox</command>
         </action>
        </keybind>

 

多媒体快捷键配的难点主要在于确定该键位的表示名称, 大多数名称都是通用的.

    XF86AudioPlay 多媒体播放
    XF86AudioPause 多媒体暂停
    XF86AudioMute 静音
    XF86AudioRaiseVolume 增大音量
    XF86AudioLowerVolume 降低音量
    XF86HomePage 浏览器打开主页
    XF86Mail 邮件
    XF86Sleep 休眠
    XF86Calculator 计算器

d. 一个随机壁纸脚本, 有bash和python二种写法. 可以任选一个放到crontab里, 实现壁纸定时更换
bash写法

#!/bin/bash
#set -x
dir_wallpaper="/home/allblue/pictures/wallpapers"
cd "$dir_wallpaper"
#du比ls更适合列出子文件路径, 只要删出行首的大小与空格, 就可得到子文件的完整相对路径.

pic=$(du -a . | sed -r  's/^[0-9]+//' | sed -r 's/^[ \t]+//g' | sed -n -r '/png|jpg|jpeg/Ip'  | shuf | head -1)
echo ""
date
echo "$pic"
if [ -f "$pic" ]; then
#crontab运行时,需指定DISPLAY变量
        DISPLAY=:0 feh --bg-center "$pic" &amp;
        killall wbar
#wbar默认会以英文环境启动, 需指定LANG变量
     env LANG=zh_CN.UTF-8 DISPLAY=:0 wbar  --pos top-left --isize 35 --zoomf 1.8 --jumpf 1 --bpress &amp;··
fi

python写法

#!/usr/bin/python
#encoding=utf-8
import os
import random
 
def filepath(v,fdir):
    h=os.path.abspath(fdir)
    if os.path.isdir(h):
         for subdir in os.listdir(h):
            filepath(v,os.path.join(h,subdir))
    else:
            v.append(h)
            #print(h)
········
if __name__ == "__main__":
        sdir="/home/allblue/pictures/wallpapers"
        u=[]
        filepath(u,sdir)
        item=""
       item=random.choice(u)
        #print(item)
        if item.split(".")[-1].lower() == "jpeg" or item.split(".")[-1].lower() == "jpg" or item.split(".")[-1].lower() == "png" :
            item = '"'+item+'"'
            cmd="DISPLAY=:0 feh --bg-center  "+item+" &amp;"
            os.system(cmd)
            os.system("killall wbar")
            os.system("env LANG=zh_CN.UTF-8 DISPLAY=:0 wbar  --pos top-left --isize 35 --zoomf 1.8 --jumpf 1 --bpress &amp; ")

