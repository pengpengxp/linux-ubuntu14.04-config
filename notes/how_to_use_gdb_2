二 . gdb 调试器

1.       Gdb 调试器是一款 GNU 开发组织并发布的 UNIX/Linux 下的程序调试工具

使用格式是:

gdb [选项] + gdc编译过的文件 ;

 

里面的选项参数:

查看文件：　＂ｌ＂（list）;

设置断点:    ＂ｂ＂(breakpoint);    例： b 8 ；//就是在第8行设置断点

查看断点：   ＂info＂b  

运行代码：   ＂r＂(run)

查看变量值:   ＂p＂变量名

单步运行:      ＂s＂(step), ＂n＂(next)  //两者间的区别在于：若有函数调用的时候， “s”会进入该函数而“n”不会进入该函数。因此， “s”就类似于VC等工具中的“step in”
(F11)， “n”类似与VC等工具中的“step over” (F10)。

恢复程序运行:  ＂c＂(continue)

别名:  aliases  —— 指其他命令的别名

断点 : breakpoints —— 使计划在指定的点停止

数据 :　data —— 检查数据

 

Gdb的使用切记点：

·  在Gcc编译选项中一定要加入“-g”。

·  只有在代码处于“运行”或“暂停”状态时才能查看变量值。

·  设置断点后程序在指定行之前停止。

 

1．工作环境相关命令

Gdb中不仅可以调试所运行的程序，而且还可以对程序相关的工作环境进行相应的

设定，甚至还可以使用 shell 中的命令进行相关的操作，其功能极其强大。

命 令 格 式 含     义

set args运  指定运行时参数，如set
行时的参数  args 2

show args   查看设置好的运行参数

path dir    设定程序的运行路径

show paths  查看程序的运行路径

set         设置环境变量
enVironment
var [=
value]

show        查看环境变量
enVironment
[var]

cd dir      进入到dir目录，相当于
            shell中的cd命令

pwd         显示当前工作目录

shell       运行shell的command命令
command


 

2.       设置断点与恢复命令

命 令 格   含     义
式

bnfo b     查看所设断点

break  行  设置断点
号或函数名
 <条件表达
式>

tbreak  行 设置临时断点，到达后被
号或函数名 自动删除
 <条件表达
式>

delete [断 删除指定断点，其断点号
点号]      为“info b”中的第一栏
           。若缺省断点号则删除所
           有断点

disable [  停止指定断点，使用“
断点号]]   info b”仍能查看此断点
           。同delete一样，省断点
           号则停止所有断点

enable [断 激活指定断点，即激活被
点号]      disable停止的断点

condition  修改对应断点的条件
[断点号] <
条件表达式
>

ignore [断 在程序执行中，忽略对应
点号]<num> 断点num次

step       单步恢复程序运行，且进
           入函数调用

next       单步恢复程序运行，但不
           进入函数调用

finish     运行程序，直到当前函数
           完成返回

c          继续执行函数，直到函数
           结束或遇到新的断点


 

3.       gdb 中源码查看相关命令

命 令 格 式      含     义

list <行号>|<函  查看指定位置代码
数名>

file [文件名]    加载指定文件

forward-search   源代码前向搜索
正则表达式

reverse-search   源代码后向搜索
正则表达式

dir dir          停止路径名

show directories 显示定义了的源文件搜索
                 路径

info line        显示加载到Gdb内存中的代
                 码


 

4.       gdb中查看运行数据相关命令

gdb中查看运行数据是指当程序处于“运行”或“暂停”状态时，可以查看的变量及表达式信息。

命 令 格  含     义
式

print 表  查看程序运行时对应表达式和
达式|变量 变量的值

x <n/f/u> 查看内存变量内容。其中n为
          整数表示显示内存的长度，f
          表示显示

display   的格式，u表示从当前地址往
表达式    后请求显示的字节数


 

5．Gdb 中修改运行参数相关命令

Gdb 还可以修改运行时的参数，并使该变量按照用户当前输入的值继续运行。它的设置方法为：在单步执行的过程中，键入命令“set  变量＝设定值” 。这样，在此之后，程序就会按照该设
定的值运行了。
