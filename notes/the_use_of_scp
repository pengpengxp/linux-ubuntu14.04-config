scp的详细用法

博客分类： linux命令
 
 作者：zccst 

 scp就是secure copy，一个在linux下用来进行远程拷贝文件的命令。和它类似的命令有cp，不过cp只是在本机进行拷贝不能跨服务器，而且scp传输是加密的。 

 作用： 
 1、我们需要获得远程服务器上的某个文件，远程服务器既没有配置ftp服务器，没有开启web服务器，也没有做共享，无法通过常规途径获得文件时，只需要通过scp命令便可轻松的达到目的。 

 2、我们需要将本机上的文件上传到远程服务器上，远程服务器没有开启ftp服务器或共享，无法通过常规途径上传是，只需要通过scp命令便可以轻松的达到目的。 



 一、将远程的filename复制到本地对应的目录下面 
 获取远程文件 
 scp -p port user@serverip:/home/user/filename /home/user/filename 

 获取远程目录 
 scp -P 2222 -r root@www.vpser.net:/root/lnmp0.4/ /home/lnmp0.4/ 

 以上端口p 为参数，port 端口， user 为ssh user， serverip 为远程服务器ip或者域名，/home/user/filename 为远程服务器的文件名 /home/user/filename 为本地服务服务器的文件名。 



 注意两点： 

 1.如果远程服务器防火墙有特殊限制，scp便要走特殊端口，具体用什么端口视情况而定，命令格式如下： 

 #scp -p 4588 remote@www.abc.com:/usr/local/sin.sh /home/administrator 

 2.使用scp要注意所使用的用户是否具有可读取远程服务器相应文件的权限。 


 二、从 本地 复制到 远程 
 1，复制文件： 
 * 命令格式： 
 scp local_file remote_username@remote_ip:remote_folder 
 或者 
 scp local_file remote_username@remote_ip:remote_file 
 或者 
 scp local_file remote_ip:remote_folder 
 或者 
 scp local_file remote_ip:remote_file 

 第1，2个指定了用户名，命令执行后需要再输入密码，第1个仅指定了远程的目录，文件名字不变，第2个指定了文件名； 
 第3，4个没有指定用户名，命令执行后需要输入用户名和密码，第3个仅指定了远程的目录，文件名字不变，第4个指定了文件名； 
 * 例程： 
 scp /home/space/music/1.mp3 root@www.cumt.edu.cn:/home/root/others/music 
 scp /home/space/music/1.mp3 root@www.cumt.edu.cn:/home/root/others/music/002.mp3 
 scp /home/space/music/1.mp3 www.cumt.edu.cn:/home/root/others/music 
 scp /home/space/music/1.mp3 www.cumt.edu.cn:/home/root/others/music/002.mp3 

 2，复制目录： 
 * 命令格式： 
 scp -r local_folder remote_username@remote_ip:remote_folder 
 或者 
 scp -r local_folder remote_ip:remote_folder 

 第1个指定了用户名，命令执行后需要再输入密码； 
 第2个没有指定用户名，命令执行后需要输入用户名和密码； 

 * 例程： 
 scp -r /home/space/music/ root@www.cumt.edu.cn:/home/root/others/ 
 scp -r /home/space/music/ www.cumt.edu.cn:/home/root/others/ 

 上面 命令 将 本地 music 目录 复制 到 远程 others 目录下，即复制后有 远程 有 ../others/music/ 目录 


 三、可能有用的几个参数 : 

 -v 和大多数 linux 命令中的 -v 意思一样，用来显示进度。 可以用来查看连接， 认证， 或是配置错误。 

 -C 使能压缩选项。 

 -4 强行使用 IPV4 地址。 

 -6 强行使用 IPV6 地址。 


 scp 的作用真的很巨大，详细用法，可以man scp 或者 scp –help 。
